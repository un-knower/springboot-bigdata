a1.sources = r1
a1.sinks = k1
a1.channels = c1

# Describe/configure the source
#a1.sources.r1.type = TAILDIR
#a1.sources.r1.positionFile = /root/testData/hive/taildir_position.json
#a1.sources.r1.filegroups = f1
#a1.sources.r1.filegroups.f1 = /root/testData/hive/catalina.out

a1.sources.r1.type = com.cmsz.springboot.source.FileSource
a1.sources.r1.file_path = /root/testData/hive/catalina.out
a1.sources.r1.offset_file= /root/testData/hive/offset.json

a1.sources.r1.selector.type = multiplexing
#以header中的level对应的值作为条件
a1.sources.r1.selector.header = level
#如果header中validation的值为SUCCESS，使用c2这个channel
a1.sources.r1.selector.mapping.ERROR = c1
#默认使用c1这个channel
#a1.sources.source1.selector.default = c1


# Describe the sink
a1.sinks.k1.type = com.cmsz.springboot.sink.RabbitMQSink
a1.sinks.k1.hostname = 192.168.5.60
a1.sinks.k1.port = 5673
a1.sinks.k1.userName = admin
a1.sinks.k1.password = 123
a1.sinks.k1.virtualHost = /
a1.sinks.k1.queue_input = spms
a1.sinks.k1.exchangeName = amq.fanout

# Use a channel which buffers events in memory
a1.channels.c1.type = memory
a1.channels.c1.capacity = 1000
a1.channels.c1.transactionCapacity = 100

# Bind the source and sink to the channel
a1.sources.r1.channels = c1
a1.sinks.k1.channel = c1
